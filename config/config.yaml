# Main project configuration
project_name: KunitzDomainHMM

# --- Directories ---
data_dir: data
results_dir: results
scripts_dir: scripts
config_dir: config

# --- Input Files (Paths relative to project root) ---
# Training seed alignment (generated by build_seed_alignment.py)
seed_alignment: data/alignments/kunitz_seed_training.sto

# Validation datasets (generated by data_prep.py)
# These paths are where data_prep.py will output, and hmm.py will read from
positive_validation_fasta: data/validation_datasets/positive_validation.fasta
non_kunitz_validation_fasta: data/validation_datasets/non_kunitz_proteins.fasta
validation_labels_txt: data/validation_datasets/validation_labels.txt

# SwissProt database for proteome-wide scan (manual download required)
swissprot_fasta: data/swissprot_database/uniprot_sprot.fasta

# --- HMMER Parameters ---
e_value_cutoff: 0.001 # E-value threshold for hmmsearch hits

# --- Negative Set Generation Strategy ---
# Choose between 'random_swissprot' or 'structurally_similar'
negative_set_strategy: 'random_swissprot' # Default to random sampling from SwissProt

# Parameters for 'random_swissprot' strategy
num_negative_samples: 50000 # Number of non-Kunitz sequences to sample from SwissProt

# Parameters for 'structurally_similar' strategy (if negative_set_strategy is set to this)
# IMPORTANT: These are *example* PDB IDs for demonstration. In a real project,
# you would meticulously curate these to be genuinely structurally similar
# but functionally unrelated to Kunitz, and NOT Kunitz themselves.
structurally_similar_negative_pdb_ids:
  - "1AON" # Example: Cyclotide (small, disulfide-rich, plant peptide)
  - "1BQC" # Example: Defensin (small, disulfide-rich, antimicrobial peptide)
  - "1G6W" # Example: Omega-agatoxin (small, neurotoxin, disulfide-rich)
  - "1M04" # Example: Conotoxin (small, neurotoxin, disulfide-rich)
  - "2M4Y" # Example: Human beta-defensin 2
  - "1W27" # Example: Scorpion toxin
  - "1J24" # Example: Snake venom neurotoxin
  - "1K25" # Example: Plant defensin
structurally_similar_negative_pdb_chains:
  1AON: "A"
  1BQC: "A"
  1G6W: "A"
  1M04: "A"
  2M4Y: "A"
  1W27: "A"
  1J24: "A"
  1K25: "A"

# --- Clustering Parameters ---
# These parameters would be used by data_prep.py (or other data curation scripts)
# for redundancy reduction (e.g., using CD-HIT) on sequence sets.
# For example, to cluster the positive validation set derived from PF00014.full.gz
# or the sequences extracted for the 'structurally_similar' negative set.
clustering_identity_threshold: 0.90 # Sequence identity threshold (e.g., 0.9 for 90%)
clustering_length_difference_cutoff: 0.90 # Length difference cutoff (e.g., 0.9 for 90% length overlap)
